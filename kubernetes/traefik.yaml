apiVersion: v1
kind: Namespace
metadata:
  name: traefik
  labels:
    app: traefik
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: traefik
  name: traefik
  labels:
    app: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
      - ingresses/status
    verbs:
      - get
      - list
      - watch
      - update
      - patch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
  - kind: ServiceAccount
    name: traefik
    namespace: traefik
---
kind: Service
apiVersion: v1
metadata:
  namespace: traefik
  name: service
  labels:
    app: traefik
spec:
  type: LoadBalancer
  loadBalancerIP: "${CLUSTER_INGRESS_ADDRESS}"
  externalTrafficPolicy: Local
  selector:
    app: traefik
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
---
apiVersion: v1
kind: Service
metadata:
  namespace: traefik
  name: admin
  labels:
    app: traefik
spec:
  selector:
    app: traefik
  ports:
    - name: admin
      port: 80
      targetPort: admin
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  namespace: traefik
  name: admin
spec:
  secretName: admin-crt
  issuerRef:
    kind: ClusterIssuer
    name: cluster-issuer
  commonName: traefik.${ENV_NAME}.kfirs.com
  dnsNames:
    - traefik.${ENV_NAME}.kfirs.com
  acme:
    config:
      - dns01:
          provider: cloudflare
        domains:
          - traefik.${ENV_NAME}.kfirs.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  namespace: traefik
  name: admin
  labels:
    app: traefik
  annotations:
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
    traefik.ingress.kubernetes.io/whitelist-source-range: "${WHITELISTED_IP_CIDRS}"
spec:
  rules:
    - host: traefik.${ENV_NAME}.kfirs.com
      http:
        paths:
          - backend:
              serviceName: admin
              servicePort: admin
  tls:
    - hosts:
        - traefik.${ENV_NAME}.kfirs.com
      secretName: admin-crt
---
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: traefik
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik
      containers:
        - name: server
          image: traefik:1.7.9
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: admin
              containerPort: 8080
          args:
            - --configfile=/config/traefik.toml
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: config
            optional: false
---
# TODO: enable Traefik autoscaler
#apiVersion: autoscaling/v2beta1
#kind: HorizontalPodAutoscaler
#metadata:
#  namespace: traefik
#  name: server
#spec:
#  scaleTargetRef:
#    apiVersion: apps/v1
#    kind: Deployment
#    name: server
#  minReplicas: 1
#  maxReplicas: 3
#  metrics:
#    - type: Pods
#      pods:
#        metricName: traefik_entrypoint_requests_per_second
#        targetAverageValue: 1k
#---
