apiVersion: v1
kind: ConfigMap
metadata:
  namespace: prometheus
  name: alertmanager
  labels:
    app: prometheus
    component: alertmanager
data:
  alertmanager.yml: |
    global: {}
    receivers:
      - name: default-receiver
        slack_configs:
          - channel: "#${GKE_CLUSTER_NAME}"
            send_resolved: true
            api_url: "${ALERTMGR_SLACK_URL}"
    route:
      group_wait: 10s
      group_interval: 5m
      receiver: default-receiver
      repeat_interval: 3h
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: prometheus
  name: alertmanager
  labels:
    app: prometheus
    component: alertmanager
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: prometheus
  name: alertmanager
  labels:
    app: prometheus
    component: alertmanager
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9093
  selector:
    app: prometheus
    component: alertmanager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prometheus
  name: alertmanager
  labels:
    app: prometheus
    component: alertmanager
spec:
  selector:
    matchLabels:
      app: prometheus
      component: alertmanager
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
        component: alertmanager
    spec:
      serviceAccountName: prometheus
      containers:
        - name: alertmanager
          image: prom/alertmanager:v0.15.3
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/alertmanager.yml
            - --storage.path=/data
            - --cluster.advertise-address=$(POD_IP):6783
          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              path: "/#/status"
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
            requests:
              cpu: 50m
              memory: 16Mi
            limits:
              cpu: 100m
              memory: 32Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: /data
        - name: configmap-reload
          image: jimmidyson/configmap-reload:v0.2.2
          imagePullPolicy: IfNotPresent
          args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          resources:
            requests:
              cpu: 10m
              memory: 16Mi
            limits:
              cpu: 100m
              memory: 32Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: alertmanager
        - name: storage-volume
          persistentVolumeClaim:
           claimName: alertmanager
