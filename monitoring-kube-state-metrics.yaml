apiVersion: v1
kind: Namespace
metadata:
  name: kube-state-metrics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-state-metrics
  name: kube-state-metrics
  labels:
    app: kube-state-metrics
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kube-state-metrics
  labels:
    app: kube-state-metrics
rules:
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: [list, watch]
  - apiGroups: [batch]
    resources:
      - cronjobs
    verbs: [list, watch]
  - apiGroups: [extensions]
    resources:
      - daemonsets
    verbs: [list, watch]
  - apiGroups: [extensions]
    resources:
      - deployments
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - endpoints
    verbs: [list, watch]
  - apiGroups: [autoscaling]
    resources:
      - horizontalpodautoscalers
    verbs: [list, watch]
  - apiGroups: [batch]
    resources:
      - jobs
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - limitranges
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - namespaces
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - nodes
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - persistentvolumeclaims
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - persistentvolumes
    verbs: [list, watch]
  - apiGroups: [policy]
    resources:
      - poddisruptionbudgets
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - pods
    verbs: [list, watch]
  - apiGroups: [extensions]
    resources:
      - replicasets
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - replicationcontrollers
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - resourcequotas
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - secrets
    verbs: [list, watch]
  - apiGroups: [""]
    resources:
      - services
    verbs: [list, watch]
  - apiGroups: [apps]
    resources:
      - statefulsets
    verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-state-metrics
  labels:
    app: kube-state-metrics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-state-metrics
subjects:
  - kind: ServiceAccount
    name: kube-state-metrics
    namespace: kube-state-metrics
---
apiVersion: v1
kind: Service
metadata:
  namespace: kube-state-metrics
  name: kube-state-metrics
  labels:
    app: kube-state-metrics
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: metrics
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: kube-state-metrics
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: kube-state-metrics
  name: kube-state-metrics
  labels:
    app: kube-state-metrics
spec:
  selector:
    matchLabels:
      app: kube-state-metrics
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: kube-state-metrics
    spec:
      serviceAccountName: kube-state-metrics
      securityContext:
        runAsUser: 65534
        fsGroup: 65534
      containers:
        - name: kube-state-metrics
          image: k8s.gcr.io/kube-state-metrics:v1.5.0
          args:
            - --collectors=configmaps
            - --collectors=cronjobs
            - --collectors=daemonsets
            - --collectors=deployments
            - --collectors=endpoints
            - --collectors=horizontalpodautoscalers
            - --collectors=jobs
            - --collectors=limitranges
            - --collectors=namespaces
            - --collectors=nodes
            - --collectors=persistentvolumeclaims
            - --collectors=persistentvolumes
            - --collectors=poddisruptionbudgets
            - --collectors=pods
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=secrets
            - --collectors=services
            - --collectors=statefulsets
            - --namespace={{ .Values.namespace }}
          ports:
            - name: metrics
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 32Mi
            limits:
              cpu: 200m
              memory: 48Mi
---
